//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 developer_float4;           // Offset:    0 Size:    16 [unused]
//   float4 depth_params;               // Offset:   16 Size:    16 [unused]
//   row_major float3x4 m_v2w;          // Offset:   32 Size:    48
//   float3 eye_direction;              // Offset:   80 Size:    12 [unused]
//   row_major float4x4 m_tVP;          // Offset:   96 Size:    64
//
// }
//
// cbuffer static_globals
// {
//
//   row_major float3x4 m_V;            // Offset:    0 Size:    48 [unused]
//   row_major float4x4 m_P;            // Offset:   48 Size:    64 [unused]
//   row_major float4x4 m_VP;           // Offset:  112 Size:    64 [unused]
//   float4 timers;                     // Offset:  176 Size:    16 [unused]
//   float4 fog_plane;                  // Offset:  192 Size:    16 [unused]
//   float4 fog_params;                 // Offset:  208 Size:    16 [unused]
//   float4 fog_color;                  // Offset:  224 Size:    16 [unused]
//   float4 L_ambient;                  // Offset:  240 Size:    16 [unused]
//   float3 L_sun_color;                // Offset:  256 Size:    12 [unused]
//   float3 L_sun_dir_w;                // Offset:  272 Size:    12 [unused]
//   float4 L_hemi_color;               // Offset:  288 Size:    16 [unused]
//   float3 eye_position;               // Offset:  304 Size:    12 [unused]
//   float4 pos_decompression_params;   // Offset:  320 Size:    16
//   float4 screen_res;                 // Offset:  336 Size:    16
//
// }
//
// cbuffer taa_globals
// {
//
//   float4 taa_jitter;                 // Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// smp_nofilter                      sampler      NA          NA    0        1
// smp_rtlinear                      sampler      NA          NA    1        1
// s_image                           texture  float4          2d    0        1
// s_position                        texture  float4          2d    1        1
// s_history                         texture  float4          2d    2        1
// $Globals                          cbuffer      NA          NA    0        1
// static_globals                    cbuffer      NA          NA    1        1
// taa_globals                       cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[22], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v0.xy
dcl_output o0.xyzw
dcl_temps 24
//
// Initial variable locations:
//   v0.x <- tc.x; v0.y <- tc.y; 
//   o0.w <- <main return value>.w
//
#line 37 "G_BUFFER.h"
mul r0.y, cb1[21].z, cb1[21].y

#line 67 "E:\\STALKER_DWM_E\\x-ray-t6638-dwm\\game\\gamedata\\shaders\\r3\\<memory>"
mov r0.xz, l(1.000000,0,0,0)

#line 37 "G_BUFFER.h"
mul r0.xy, r0.xyxx, cb1[20].xxxx  // r0.x <- G_BUFFER::InvFocalLen.x; r0.y <- G_BUFFER::InvFocalLen.y; r0.x <- G_BUFFER::InvFocalLen.x; r0.y <- G_BUFFER::InvFocalLen.y

#line 213 "E:\\STALKER_DWM_E\\x-ray-t6638-dwm\\game\\gamedata\\shaders\\r3\\<memory>"
mad r1.xy, -cb2[0].xyxx, l(-0.500000, 0.500000, 0.000000, 0.000000), v0.xyxx

#line 135
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r1.xyxx, t0.xyzw, s1  // r2.x <- <AAHelper::color return value>.x; r2.y <- <AAHelper::color return value>.y; r2.z <- <AAHelper::color return value>.z

#line 142
mad r3.xyzw, cb1[21].zwzw, l(0.000000, 1.000000, 0.000000, -1.000000), r1.xyxy

#line 135
sample_indexable(texture2d)(float,float,float,float) r1.z, r3.xyxx, t0.xzyw, s1  // r1.z <- <AAHelper::color return value>.y
sample_indexable(texture2d)(float,float,float,float) r1.w, r3.zwzz, t0.xzwy, s1  // r1.w <- <AAHelper::color return value>.y

#line 144
mad r3.xyzw, cb1[21].zwzw, l(1.000000, 0.000000, -1.000000, 0.000000), r1.xyxy

#line 135
sample_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xzwy, s1  // r2.w <- <AAHelper::color return value>.y
sample_indexable(texture2d)(float,float,float,float) r3.x, r3.zwzz, t0.yxzw, s1  // r3.x <- <AAHelper::color return value>.y

#line 146
add r1.zw, -r1.zzzw, r2.yyyy
max r1.z, |r1.w|, |r1.z|  // r1.z <- edge
add r1.w, -r2.w, r2.y
max r1.z, |r1.w|, r1.z
add r1.w, r2.y, -r3.x
max r1.z, |r1.w|, r1.z
mul r1.z, r1.z, r1.z
mul r1.z, r1.z, r1.z
mul r1.z, r1.z, l(1000.000000)
min r1.z, r1.z, l(1.000000)  // r1.z <- edge

#line 250 "G_BUFFER.h"
sample_l_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t1.wxyz, s0, l(0.000000)  // r1.x <- <G_BUFFER::sample0 return value>.w

#line 426
ftoi r1.x, r1.x

#line 762
imax r1.x, -r1.x, r1.x  // r1.x <- packed_s_absolute

#line 765
and r1.x, r1.x, l(255)  // r1.x <- unpacked.x

#line 771
utof r1.x, r1.x

#line 219
mul r1.y, r1.x, l(0.003922)

#line 213
ne r1.y, l(0.000000, 0.000000, 0.000000, 0.000000), r1.y

#line 219
mad r1.x, r1.x, l(0.007843), l(-1.000000)  // r1.x <- val
lt r1.x, r1.x, l(0.000000)
and r1.x, r1.y, r1.x
and r1.y, r1.x, l(1)  // r1.y <- mask

#line 250
sample_l_indexable(texture2d)(float,float,float,float) r1.w, v0.xyxx, t1.xywz, s0, l(0.000000)  // r1.w <- <G_BUFFER::sample0 return value>.z

#line 548
ge r2.w, r1.w, l(0.010000)
movc r1.w, r2.w, r1.w, l(1000.000000)

#line 449
mad r3.xy, v0.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
mul r3.xy, r0.xyxx, r3.xyxx

#line 166 "E:\\STALKER_DWM_E\\x-ray-t6638-dwm\\game\\gamedata\\shaders\\r3\\<memory>"
mov r3.zw, l(0,0,1.000000,1.000000)

#line 449 "G_BUFFER.h"
mul r3.xyz, r1.wwww, r3.xyzx  // r3.x <- <G_BUFFER::unpack_position return value>.x; r3.y <- <G_BUFFER::unpack_position return value>.y; r3.z <- <G_BUFFER::unpack_position return value>.z

#line 166 "E:\\STALKER_DWM_E\\x-ray-t6638-dwm\\game\\gamedata\\shaders\\r3\\<memory>"
dp4 r4.x, cb0[2].xyzw, r3.xyzw  // r4.x <- position_w.x
dp4 r4.y, cb0[3].xyzw, r3.xyzw  // r4.y <- position_w.y
dp4 r4.z, cb0[4].xyzw, r3.xyzw  // r4.z <- position_w.z
mov r4.w, l(1.000000)
dp4 r0.x, cb0[6].xyzw, r4.xyzw  // r0.x <- proj_next.x
dp4 r0.y, cb0[7].xyzw, r4.xyzw  // r0.y <- proj_next.y
dp4 r1.w, cb0[9].xyzw, r4.xyzw  // r1.w <- proj_next.w
div r3.xyzw, r0.xxxy, r1.wwww
mad r3.xyzw, r3.xyzw, l(0.500000, 0.500000, 0.500000, -0.500000), l(0.500000, 0.500000, 0.500000, 0.500000)  // r3.z <- tc_next.x; r3.w <- tc_next.y

#line 173
movc r3.xyzw, r1.yyyy, v0.xxxy, r3.xyzw

#line 22 "common_functions.h"
ge r0.xy, r3.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
ge r4.xy, l(1.000000, 1.000000, 0.000000, 0.000000), r3.zwzz
and r0.xy, r0.xyxx, r4.xyxx  // r0.y <- <is_in_range return value>

#line 27
and r0.x, r0.y, r0.x  // r0.x <- <is_in_quad return value>

#line 61 "E:\\STALKER_DWM_E\\x-ray-t6638-dwm\\game\\gamedata\\shaders\\r3\\<memory>"
mad r3.xyzw, r3.xyzw, cb1[21].xxxy, l(0.500000, 0.500000, 0.500000, 0.500000)  // r3.z <- pixel.x; r3.w <- pixel.y

#line 64
round_ni r4.xy, r3.zwzz
div r4.xy, r4.xyxx, cb1[21].xyxx
mad r4.xy, -cb1[21].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000), r4.xyxx  // r4.x <- pixel.x; r4.y <- pixel.y

#line 71
mov r5.xyz, -cb1[21].zwzz

#line 66
add r4.zw, r4.xxxy, r5.xxxy
sample_indexable(texture2d)(float,float,float,float) r6.xyzw, r4.zwzz, t2.xyzw, s1  // r6.x <- C00.x; r6.y <- C00.y; r6.z <- C00.z; r6.w <- C00.w
mov r0.w, -cb1[21].w
add r0.yz, r0.zzwz, r4.xxyx
sample_indexable(texture2d)(float,float,float,float) r7.xyzw, r0.yzyy, t2.xyzw, s1  // r7.x <- C10.x; r7.y <- C10.y; r7.z <- C10.z; r7.w <- C10.w
mad r0.yz, cb1[21].zzwz, l(0.000000, 1.000000, -1.000000, 0.000000), r4.xxyx
sample_indexable(texture2d)(float,float,float,float) r8.xyzw, r0.yzyy, t2.xyzw, s1  // r8.x <- C20.x; r8.y <- C20.y; r8.z <- C20.z; r8.w <- C20.w

#line 74
mul r0.z, cb1[21].z, l(2.000000)

#line 69
mad r4.zw, cb1[21].zzzw, l(0.000000, 0.000000, 2.000000, -1.000000), r4.xxxy
sample_indexable(texture2d)(float,float,float,float) r9.xyzw, r4.zwzz, t2.xyzw, s1  // r9.x <- C30.x; r9.y <- C30.y; r9.z <- C30.z; r9.w <- C30.w
mov r5.w, l(0)
add r4.zw, r4.xxxy, r5.zzzw
sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r4.zwzz, t2.xyzw, s1  // r5.x <- C01.x; r5.y <- C01.y; r5.z <- C01.z; r5.w <- C01.w
sample_indexable(texture2d)(float,float,float,float) r10.xyzw, r4.xyxx, t2.xyzw, s1  // r10.x <- C11.x; r10.y <- C11.y; r10.z <- C11.z; r10.w <- C11.w

#line 77
mov r11.xw, cb1[21].zzzw
mov r11.yz, l(0,0,0,0)
add r11.xyzw, r4.xyxy, r11.xyzw

#line 73
sample_indexable(texture2d)(float,float,float,float) r12.xyzw, r11.xyxx, t2.xyzw, s1  // r12.x <- C21.x; r12.y <- C21.y; r12.z <- C21.z; r12.w <- C21.w
mov r0.w, l(0)
add r0.yz, r0.zzwz, r4.xxyx
sample_indexable(texture2d)(float,float,float,float) r13.xyzw, r0.yzyy, t2.xyzw, s1  // r13.x <- C31.x; r13.y <- C31.y; r13.z <- C31.z; r13.w <- C31.w

#line 79
mad r14.xyzw, cb1[21].zwzw, l(-1.000000, 1.000000, 2.000000, 1.000000), r4.xyxy

#line 76
sample_indexable(texture2d)(float,float,float,float) r15.xyzw, r14.xyxx, t2.xyzw, s1  // r15.x <- C02.x; r15.y <- C02.y; r15.z <- C02.z; r15.w <- C02.w
sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r11.zwzz, t2.xyzw, s1  // r11.x <- C12.x; r11.y <- C12.y; r11.z <- C12.z; r11.w <- C12.w
add r0.yz, r4.xxyx, cb1[21].zzwz
sample_indexable(texture2d)(float,float,float,float) r16.xyzw, r0.yzyy, t2.xyzw, s1  // r16.x <- C22.x; r16.y <- C22.y; r16.z <- C22.z; r16.w <- C22.w
sample_indexable(texture2d)(float,float,float,float) r14.xyzw, r14.zwzz, t2.xyzw, s1  // r14.x <- C32.x; r14.y <- C32.y; r14.z <- C32.z; r14.w <- C32.w

#line 82
mul r0.w, cb1[21].w, l(2.000000)
mad r4.zw, cb1[21].zzzw, l(0.000000, 0.000000, -1.000000, 2.000000), r4.xxxy
sample_indexable(texture2d)(float,float,float,float) r17.xyzw, r4.zwzz, t2.xyzw, s1  // r17.x <- C03.x; r17.y <- C03.y; r17.z <- C03.z; r17.w <- C03.w
mov r0.z, l(0)
add r0.yz, r0.zzwz, r4.xxyx
sample_indexable(texture2d)(float,float,float,float) r18.xyzw, r0.yzyy, t2.xyzw, s1  // r18.x <- C13.x; r18.y <- C13.y; r18.z <- C13.z; r18.w <- C13.w
mad r0.yz, cb1[21].zzwz, l(0.000000, 1.000000, 2.000000, 0.000000), r4.xxyx
sample_indexable(texture2d)(float,float,float,float) r19.xyzw, r0.yzyy, t2.xyzw, s1  // r19.x <- C23.x; r19.y <- C23.y; r19.z <- C23.z; r19.w <- C23.w
mad r0.yz, cb1[21].zzwz, l(0.000000, 2.000000, 2.000000, 0.000000), r4.xxyx
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r0.yzyy, t2.xyzw, s1  // r4.x <- C33.x; r4.y <- C33.y; r4.z <- C33.z; r4.w <- C33.w

#line 191
mad r20.xyzw, cb1[21].zwzw, l(-1.000000, 0.000000, 1.000000, 0.000000), v0.xyxy

#line 135
sample_indexable(texture2d)(float,float,float,float) r0.yzw, r20.xyxx, t0.wxyz, s1  // r0.y <- <AAHelper::color return value>.x; r0.z <- <AAHelper::color return value>.y; r0.w <- <AAHelper::color return value>.z
sample_indexable(texture2d)(float,float,float,float) r20.xyz, r20.zwzz, t0.xyzw, s1  // r20.x <- <AAHelper::color return value>.x; r20.y <- <AAHelper::color return value>.y; r20.z <- <AAHelper::color return value>.z

#line 191
mad r21.xyzw, cb1[21].zwzw, l(0.000000, -1.000000, 0.000000, 1.000000), v0.xyxy  // r21.z <- tc.x; r21.w <- tc.y

#line 135
sample_indexable(texture2d)(float,float,float,float) r22.xyz, r21.xyxx, t0.xyzw, s1  // r22.x <- <AAHelper::color return value>.x; r22.y <- <AAHelper::color return value>.y; r22.z <- <AAHelper::color return value>.z
sample_indexable(texture2d)(float,float,float,float) r21.xyz, r21.zwzz, t0.xyzw, s1  // r21.x <- <AAHelper::color return value>.x; r21.y <- <AAHelper::color return value>.y; r21.z <- <AAHelper::color return value>.z

#line 178
if_nz r0.x

#line 63
  frc r3.xyzw, r3.xyzw  // r3.z <- fract.x; r3.w <- fract.y

#line 42
  add r23.xyzw, r3.xyzw, l(-1.000000, -2.000000, 1.000000, -1.000000)
  mul r3.xy, -r3.zwzz, r23.xwxx
  mul r3.xy, r3.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
  mul r0.x, r23.y, r3.x
  mul r0.x, r0.x, l(-0.333333)
  mul r1.w, r23.x, r23.z
  mul r1.w, r23.y, r1.w
  mul r1.w, r1.w, l(0.500000)
  mul r7.xyzw, r1.wwww, r7.xyzw
  mad r6.xyzw, r6.xyzw, r0.xxxx, r7.xyzw
  mul r2.w, r3.z, r23.z
  mul r3.xz, r23.yyxy, r2.wwww
  mul r3.xz, r3.xxzx, l(-0.500000, 0.000000, 0.166667, 0.000000)
  mad r6.xyzw, r8.xyzw, r3.xxxx, r6.xyzw
  mad r6.xyzw, r9.xyzw, r3.zzzz, r6.xyzw  // r6.x <- <AAHelper::LagrangeSampler::FilterCubic return value>.x; r6.y <- <AAHelper::LagrangeSampler::FilterCubic return value>.y; r6.z <- <AAHelper::LagrangeSampler::FilterCubic return value>.z; r6.w <- <AAHelper::LagrangeSampler::FilterCubic return value>.w; r6.x <- <AAHelper::LagrangeSampler::FilterCubic return value>.x; r6.y <- <AAHelper::LagrangeSampler::FilterCubic return value>.y; r6.z <- <AAHelper::LagrangeSampler::FilterCubic return value>.z; r6.w <- <AAHelper::LagrangeSampler::FilterCubic return value>.w
  mul r7.xyzw, r1.wwww, r10.xyzw
  mad r5.xyzw, r5.xyzw, r0.xxxx, r7.xyzw
  mad r5.xyzw, r12.xyzw, r3.xxxx, r5.xyzw
  mad r5.xyzw, r13.xyzw, r3.zzzz, r5.xyzw  // r5.x <- <AAHelper::LagrangeSampler::FilterCubic return value>.x; r5.y <- <AAHelper::LagrangeSampler::FilterCubic return value>.y; r5.z <- <AAHelper::LagrangeSampler::FilterCubic return value>.z; r5.w <- <AAHelper::LagrangeSampler::FilterCubic return value>.w; r5.x <- <AAHelper::LagrangeSampler::FilterCubic return value>.x; r5.y <- <AAHelper::LagrangeSampler::FilterCubic return value>.y; r5.z <- <AAHelper::LagrangeSampler::FilterCubic return value>.z; r5.w <- <AAHelper::LagrangeSampler::FilterCubic return value>.w
  mul r7.xyzw, r1.wwww, r11.xyzw
  mad r7.xyzw, r15.xyzw, r0.xxxx, r7.xyzw
  mad r7.xyzw, r16.xyzw, r3.xxxx, r7.xyzw
  mad r7.xyzw, r14.xyzw, r3.zzzz, r7.xyzw  // r7.x <- <AAHelper::LagrangeSampler::FilterCubic return value>.x; r7.y <- <AAHelper::LagrangeSampler::FilterCubic return value>.y; r7.z <- <AAHelper::LagrangeSampler::FilterCubic return value>.z; r7.w <- <AAHelper::LagrangeSampler::FilterCubic return value>.w; r7.x <- <AAHelper::LagrangeSampler::FilterCubic return value>.x; r7.y <- <AAHelper::LagrangeSampler::FilterCubic return value>.y; r7.z <- <AAHelper::LagrangeSampler::FilterCubic return value>.z; r7.w <- <AAHelper::LagrangeSampler::FilterCubic return value>.w
  mul r8.xyzw, r1.wwww, r18.xyzw
  mad r8.xyzw, r17.xyzw, r0.xxxx, r8.xyzw
  mad r8.xyzw, r19.xyzw, r3.xxxx, r8.xyzw
  mad r4.xyzw, r4.xyzw, r3.zzzz, r8.xyzw  // r4.x <- <AAHelper::LagrangeSampler::FilterCubic return value>.x; r4.y <- <AAHelper::LagrangeSampler::FilterCubic return value>.y; r4.z <- <AAHelper::LagrangeSampler::FilterCubic return value>.z; r4.w <- <AAHelper::LagrangeSampler::FilterCubic return value>.w; r4.x <- <AAHelper::LagrangeSampler::FilterCubic return value>.x; r4.y <- <AAHelper::LagrangeSampler::FilterCubic return value>.y; r4.z <- <AAHelper::LagrangeSampler::FilterCubic return value>.z; r4.w <- <AAHelper::LagrangeSampler::FilterCubic return value>.w
  add r3.xz, r3.wwww, l(-2.000000, 0.000000, 1.000000, 0.000000)
  mul r0.x, r3.x, r3.y
  mul r0.x, r0.x, l(-0.333333)
  mul r1.w, r23.w, r3.z
  mul r1.w, r3.x, r1.w
  mul r1.w, r1.w, l(0.500000)
  mul r5.xyzw, r1.wwww, r5.xyzw
  mad r5.xyzw, r6.xyzw, r0.xxxx, r5.xyzw
  mul r0.x, r3.w, r3.z
  mul r1.w, r3.x, r0.x
  mul r1.w, r1.w, l(-0.500000)
  mad r3.xyzw, r7.xyzw, r1.wwww, r5.xyzw
  mul r0.x, r23.w, r0.x
  mul r0.x, r0.x, l(0.166667)
  mad r3.xyzw, r4.xyzw, r0.xxxx, r3.xyzw  // r3.x <- <AAHelper::LagrangeSampler::FilterCubic return value>.x; r3.y <- <AAHelper::LagrangeSampler::FilterCubic return value>.y; r3.z <- <AAHelper::LagrangeSampler::FilterCubic return value>.z; r3.w <- <AAHelper::LagrangeSampler::FilterCubic return value>.w

#line 108
  mul r0.x, r3.w, l(255.000000)
  ftou r0.x, r0.x  // r0.x <- a
  ubfe r1.w, l(1), l(7), r0.x

#line 180
  ieq r2.w, r1.x, l(0)
  ine r1.w, r1.w, l(0)
  and r1.w, r1.w, r2.w

#line 183
  if_z r1.w

#line 117
    add r1.w, -r1.z, l(1.000000)  // r1.w <- scene.plane

#line 110
    and r0.x, r0.x, l(127)
    utof r0.x, r0.x

#line 117
    mad r0.x, -r0.x, l(0.007874), l(1.000000)  // r0.x <- scene.plane

#line 192
    min r4.xyz, r0.yzwy, r2.xyzx
    max r0.yzw, r0.yyzw, r2.xxyz
    min r4.xyz, r20.xyzx, r4.xyzx
    max r0.yzw, r20.xxyz, r0.yyzw
    min r4.xyz, r22.xyzx, r4.xyzx
    max r0.yzw, r22.xxyz, r0.yyzw
    min r4.xyz, r21.xyzx, r4.xyzx
    max r0.yzw, r21.xxyz, r0.yyzw

#line 196
    add r5.xyz, r4.xyzx, r0.yzwy
    add r0.yzw, -r4.xxyz, r0.yyzw
    mul r0.yzw, r0.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)  // r0.y <- extents.x; r0.z <- extents.y; r0.w <- extents.z
    mad r4.xyz, -r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r3.xyzx  // r4.x <- offset.x; r4.y <- offset.y; r4.z <- offset.z
    div r0.yzw, r4.xxyz, r0.yyzw
    max r0.z, |r0.w|, |r0.z|
    max r0.y, r0.z, |r0.y|  // r0.y <- repeat_max
    add r0.x, -r0.x, r1.w
    lt r0.x, |r0.x|, l(0.010000)
    or r0.x, r0.x, r1.x

#line 208
    movc r0.xz, r0.xxxx, l(1.500000,0,0.962500,0), l(3.000000,0,0.937500,0)
    ge r0.x, r0.x, r0.y
    add r3.xyz, -r2.xyzx, r3.xyzx
    mad r0.yzw, r0.zzzz, r3.xxyz, r2.xxyz  // r0.y <- scene.color.x; r0.z <- scene.color.y; r0.w <- scene.color.z
    movc o0.xyz, r0.xxxx, r0.yzwy, r2.xyzx
  else 
    mov o0.xyz, r2.xyzx  // o0.x <- scene.color.x; o0.y <- scene.color.y; o0.z <- scene.color.z
  endif 
else   // Prior locations: r1.w <- proj_next.w
  mov o0.xyz, r2.xyzx  // o0.x <- scene.color.x; o0.y <- scene.color.y; o0.z <- scene.color.z
endif 

#line 102
mul r0.x, r1.z, l(127.000000)
ftou r0.x, r0.x
imad r0.x, r1.y, l(128), r0.x
utof r0.x, r0.x
mul o0.w, r0.x, l(0.003922)

#line 217
ret 
// Approximately 191 instruction slots used
